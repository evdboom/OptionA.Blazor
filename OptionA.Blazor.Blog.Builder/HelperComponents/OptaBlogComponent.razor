@using OptionA.Blazor.Components

<div @attributes="@DataProvider.GetAttributes(BuilderType.Component)">
    <OptaChild Content="@DataProvider.GetContent(BuilderType.ComponentTitle, Name)"/>    
    <div @attributes="@DataProvider.GetAttributes(BuilderType.ComponentContent)">
        @ChildContent
    </div>
    @if (!HideButtons)
    {
        <div @attributes="@DataProvider.GetAttributes(BuilderType.ButtonContainer)">
            <button type="button" @attributes="@GetRemoveAttributes()" @onclick="async () => await ContentRemoved.InvokeAsync()">
                <OptaChild Content="@DataProvider.GetContent(BuilderType.RemoveButton, "Remove")"/>
            </button>
            <button type="button" @attributes="@GetPropertiesAttributes()" @onclick="EditProperties">
                <OptaChild Content="@DataProvider.GetContent(BuilderType.PropertiesButton, "Properties")" />
            </button>
            <div @attributes="@DataProvider.GetAttributes(BuilderType.MoveButtonContainer)">
                <button type="button" @attributes="@GetMoveUpAttributes()" @onclick="async () => await MovedUp.InvokeAsync()">
                    <OptaChild Content="@DataProvider.GetContent(BuilderType.MoveUpButton, "Up")" />
                </button>
                <button type="button" @attributes="@GetMoveDownAttributes()" @onclick="async () => await MovedDown.InvokeAsync()">
                    <OptaChild Content="@DataProvider.GetContent(BuilderType.MoveDownButton, "Down")" />
                </button>
            </div>
        </div>
    }
</div>
@if (Content is not null)
{
    <OptaModal @ref="_editModal"
               Draggable="false"
               Attributes="@DataProvider.GetAttributes(BuilderType.PropertiesModal)">
        <Header>
            <OptaChild Content="@DataProvider.GetContent(BuilderType.PropertiesModalTitle, "**Properties**")" />
        </Header>
        <Content>
            <OptaListBuilder ContentChanged="ContentChanged"
                             ItemPlaceholder="Class.."
                             ItemTitle="Add additional classes"
                             Label="Additional classes"
                             Items="Content.AdditionalClasses" />
            <OptaListBuilder ContentChanged="ContentChanged"
                             ItemPlaceholder="Class to exclude.."
                             ItemTitle="Default classes to remove"
                             Label="Removed default classes"
                             Items="Content.RemovedClasses" />
            @if (AdditionalProperties is not null)
            {
                @AdditionalProperties
            }
        </Content>
    </OptaModal>
}
