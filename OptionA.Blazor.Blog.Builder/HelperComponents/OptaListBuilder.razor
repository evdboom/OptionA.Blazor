@if (Items is not null)
{
    <div @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.GroupClass)">
        <div @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.LabelClass)">
            <OptaText Content="@DataProvider.GetContent(BuilderType, AttributeTypes.Label, Label)" />
            <div @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.ContainerClass | AttributeTypes.AddButton)">
                <button type="button" @onclick="AddItem" @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.Class | AttributeTypes.Title | AttributeTypes.AddButton)">
                    <OptaText Content="@DataProvider.GetContent(BuilderType, AttributeTypes.Content | AttributeTypes.AddButton, "Add")" />
                </button>
            </div>
        </div>
        <div @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.InnerGroupClass)">
            @foreach (var item in Items.Select((value, index) => new { Item = value, Index = index }))
            {
                <div @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.ContainerClass)">
                    <input @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.Class | AttributeTypes.Placeholder)" value="@item.Item" @oninput="@(e => UpdateItem($"{e.Value}", item.Index))" />
                </div>
                <div @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.ContainerClass | AttributeTypes.RemoveButton)">
                    <button type="button" @onclick="() => RemoveItem(item.Index)" @attributes="@DataProvider.GetAttributes(BuilderType, AttributeTypes.Class | AttributeTypes.Title | AttributeTypes.RemoveButton)">
                        <OptaText Content="@DataProvider.GetContent(BuilderType, AttributeTypes.Content | AttributeTypes.RemoveButton, "Remove")" />
                    </button>
                </div>
            }
        </div>
    </div>
}